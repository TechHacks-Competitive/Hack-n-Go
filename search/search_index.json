{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hack n Go \u00b6 Why should you spend hours finding the \u201cbest\u201d way to learn something? Why should you spend days \u201ccatching up-to-speed\u201d with the other hackers? Expect more. Search less Created by hackers, for hackers. Get Started","title":"Home"},{"location":"#hack-n-go","text":"Why should you spend hours finding the \u201cbest\u201d way to learn something? Why should you spend days \u201ccatching up-to-speed\u201d with the other hackers? Expect more. Search less Created by hackers, for hackers. Get Started","title":"Hack n Go"},{"location":"license/","text":"CC BY-NC-SA 4.0 \u00b6 Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International","title":"License"},{"location":"license/#cc-by-nc-sa-40","text":"Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International","title":"CC BY-NC-SA 4.0"},{"location":"hacker/api/","text":"How to use APIs in Hackathons \u00b6 APIs are some of the most important things that have graced the green earth. The allow the common hacker to do things you don\u2019t have to spend time on ever again. Many apis exist today that range in all sorts of topics and genres Check this list out for lists you didn\u2019t know about. https://apilist.fun/ Visual Watch this video on intro to apis Kinesthetic https://technologyadvice.com/blog/information-technology/how-to-use-an-api/ Look over this website guide on how to use an api responsibly and quickly","title":"How to use APIs in Hackathons"},{"location":"hacker/api/#how-to-use-apis-in-hackathons","text":"APIs are some of the most important things that have graced the green earth. The allow the common hacker to do things you don\u2019t have to spend time on ever again. Many apis exist today that range in all sorts of topics and genres Check this list out for lists you didn\u2019t know about. https://apilist.fun/ Visual Watch this video on intro to apis Kinesthetic https://technologyadvice.com/blog/information-technology/how-to-use-an-api/ Look over this website guide on how to use an api responsibly and quickly","title":"How to use APIs in Hackathons"},{"location":"hacker/automate/","text":"How to Automate Everything with the Commandline \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer tincidunt aliquam ornare. Aliquam hendrerit sapien nunc, porta auctor urna volutpat nec. Praesent blandit urna massa, id cursus nisl imperdiet a. Integer aliquet fermentum dolor. Morbi suscipit nunc a consequat tincidunt. Praesent pellentesque varius augue, eu mattis lorem tincidunt et. Maecenas sodales vestibulum enim in condimentum. In nibh massa, dictum pellentesque nunc in, sagittis rutrum mauris. Morbi venenatis justo ac semper pulvinar. Praesent eget rhoncus mi. Fusce dignissim, nisl viverra auctor consequat, elit lacus egestas diam, nec commodo orci mauris id leo. Cras eget nulla in magna ornare tempus sit amet at nisi. Donec in aliquam lacus. Phasellus vitae nunc accumsan, lacinia erat a, pharetra leo. In hac habitasse platea dictumst. Integer pretium libero felis, non malesuada ante aliquam eu. Nunc est lectus, ultrices vitae eros in, consectetur facilisis velit. Pellentesque lobortis ac eros vitae malesuada. Aenean lacinia posuere orci, vitae ornare erat ullamcorper nec. Nulla vestibulum tortor metus, ut tempus quam vulputate id. Mauris diam felis, vehicula id lorem sit amet, vehicula sollicitudin massa. Duis consequat velit non nisl hendrerit, non cursus ipsum faucibus. Ut et ex sed diam dapibus varius at a libero. Praesent dolor nisl, suscipit in enim et, maximus posuere ipsum.","title":"How to Automate Everything with the Commandline"},{"location":"hacker/automate/#how-to-automate-everything-with-the-commandline","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer tincidunt aliquam ornare. Aliquam hendrerit sapien nunc, porta auctor urna volutpat nec. Praesent blandit urna massa, id cursus nisl imperdiet a. Integer aliquet fermentum dolor. Morbi suscipit nunc a consequat tincidunt. Praesent pellentesque varius augue, eu mattis lorem tincidunt et. Maecenas sodales vestibulum enim in condimentum. In nibh massa, dictum pellentesque nunc in, sagittis rutrum mauris. Morbi venenatis justo ac semper pulvinar. Praesent eget rhoncus mi. Fusce dignissim, nisl viverra auctor consequat, elit lacus egestas diam, nec commodo orci mauris id leo. Cras eget nulla in magna ornare tempus sit amet at nisi. Donec in aliquam lacus. Phasellus vitae nunc accumsan, lacinia erat a, pharetra leo. In hac habitasse platea dictumst. Integer pretium libero felis, non malesuada ante aliquam eu. Nunc est lectus, ultrices vitae eros in, consectetur facilisis velit. Pellentesque lobortis ac eros vitae malesuada. Aenean lacinia posuere orci, vitae ornare erat ullamcorper nec. Nulla vestibulum tortor metus, ut tempus quam vulputate id. Mauris diam felis, vehicula id lorem sit amet, vehicula sollicitudin massa. Duis consequat velit non nisl hendrerit, non cursus ipsum faucibus. Ut et ex sed diam dapibus varius at a libero. Praesent dolor nisl, suscipit in enim et, maximus posuere ipsum.","title":"How to Automate Everything with the Commandline"},{"location":"hacker/commandline/","text":"The command line \u00b6 Visual Kinesthetic If you want to get a hands on free guide, but don\u2019t want to have to download a terminal emulator, try this guide: https://www.learnshell.org/ Getting around \u00b6 To get around in the terminal, you can use the cd command. Usually, when you open your terminal, the directory you\u2019re in is called your home directory . The home directory differs on operating systems and your user. On Linux and macOS, it\u2019s /home/<username> . On Windows, it\u2019s C:\\Users\\<username> . Throughout this guide, we will shorten the home directory to ~/ . To go into a different path, run cd , and then the path. This can be a relative path or an absolute path . Relative paths vs. absolute paths \u00b6 Relative paths are paths that are relative to the directory you are currently in. - Example: if I was in ~/trans , and ran cd rights , I would end up in ~/trans/rights . On the other hand, absolute paths are just the full path that you wish to go to. - Example, if I was in, ~/human , and I wanted to go to ~/rights , I could run cd ~/rights , and go there straight away. Path tricks \u00b6 In paths, .. is a shortcut for previous directory, and . for current directory. - Example: ~/a/../b/./file resolves to ~/b/file . Try it yourself : What does ~/one/three/.././../one/././../two resolve to?","title":"Intro to the Shell/Commandline"},{"location":"hacker/commandline/#the-command-line","text":"Visual Kinesthetic If you want to get a hands on free guide, but don\u2019t want to have to download a terminal emulator, try this guide: https://www.learnshell.org/","title":"The command line"},{"location":"hacker/commandline/#getting-around","text":"To get around in the terminal, you can use the cd command. Usually, when you open your terminal, the directory you\u2019re in is called your home directory . The home directory differs on operating systems and your user. On Linux and macOS, it\u2019s /home/<username> . On Windows, it\u2019s C:\\Users\\<username> . Throughout this guide, we will shorten the home directory to ~/ . To go into a different path, run cd , and then the path. This can be a relative path or an absolute path .","title":"Getting around"},{"location":"hacker/commandline/#relative-paths-vs-absolute-paths","text":"Relative paths are paths that are relative to the directory you are currently in. - Example: if I was in ~/trans , and ran cd rights , I would end up in ~/trans/rights . On the other hand, absolute paths are just the full path that you wish to go to. - Example, if I was in, ~/human , and I wanted to go to ~/rights , I could run cd ~/rights , and go there straight away.","title":"Relative paths vs. absolute paths"},{"location":"hacker/commandline/#path-tricks","text":"In paths, .. is a shortcut for previous directory, and . for current directory. - Example: ~/a/../b/./file resolves to ~/b/file . Try it yourself : What does ~/one/three/.././../one/././../two resolve to?","title":"Path tricks"},{"location":"hacker/heroku/","text":"The Beginning \u00b6 Well, for starters, it would probably help to have an account visit https://signup.heroku.com/ and create an account. After that, you\u2019ll probably want to download the Heroku and Git CLIs A CLI, or Command Line Interface, is a way for you to call certain commands from your terminal. Download Guide \u00b6 Windows \u00b6 64 Bit installer 32 Bit installer Mac \u00b6 Since you should already have homebrew and git installed, all you have to do is type: brew install heroku/brew/heroku Ubuntu \u00b6 Run the following in your terminal sudo snap install heroku \u2013classic Accessing Heroku through the CLI \u00b6 Now you\u2019re going to want to access your account from the terminal. Just type heroku login And bam! You\u2019ll have access to all your projects from the terminal! Now, we are going to create an entire heroku website through just the terminal! Be warned, this app is going to use Node.js in order to run, so run node \u2013version and npm \u2013version in order to make sure you have everything properly installed now that that is out of the way, run heroku create name-of-your-app BAM! That easy! Well not really, we still have more to go. Let\u2019s create a couple files. git init npm init touch Procfile touch app.js npm install express \u2013save Ok, great, we have everything we need in the file directory, we just have to append some stuff to the files. app.js \u00b6 var express = require('express'); var app = express(); app.get('/', function (req, res) { res.send('Hello World!'); }); app.listen(3000, function () { console.log('Example app listening on port 3000!'); }); Procfile \u00b6 web: node app.js Launching our app! \u00b6 This is the easiest part! Just run a few commands such as heroku git:remote -a name-of-your-app git add . git commit -am \u2018first commit\u2019 git push heroku master heroku open Bam! there\u2019s your app up and running!","title":"Heroku"},{"location":"hacker/heroku/#the-beginning","text":"Well, for starters, it would probably help to have an account visit https://signup.heroku.com/ and create an account. After that, you\u2019ll probably want to download the Heroku and Git CLIs A CLI, or Command Line Interface, is a way for you to call certain commands from your terminal.","title":"The Beginning"},{"location":"hacker/heroku/#download-guide","text":"","title":"Download Guide"},{"location":"hacker/heroku/#windows","text":"64 Bit installer 32 Bit installer","title":"Windows"},{"location":"hacker/heroku/#mac","text":"Since you should already have homebrew and git installed, all you have to do is type: brew install heroku/brew/heroku","title":"Mac"},{"location":"hacker/heroku/#ubuntu","text":"Run the following in your terminal sudo snap install heroku \u2013classic","title":"Ubuntu"},{"location":"hacker/heroku/#accessing-heroku-through-the-cli","text":"Now you\u2019re going to want to access your account from the terminal. Just type heroku login And bam! You\u2019ll have access to all your projects from the terminal! Now, we are going to create an entire heroku website through just the terminal! Be warned, this app is going to use Node.js in order to run, so run node \u2013version and npm \u2013version in order to make sure you have everything properly installed now that that is out of the way, run heroku create name-of-your-app BAM! That easy! Well not really, we still have more to go. Let\u2019s create a couple files. git init npm init touch Procfile touch app.js npm install express \u2013save Ok, great, we have everything we need in the file directory, we just have to append some stuff to the files.","title":"Accessing Heroku through the CLI"},{"location":"hacker/heroku/#appjs","text":"var express = require('express'); var app = express(); app.get('/', function (req, res) { res.send('Hello World!'); }); app.listen(3000, function () { console.log('Example app listening on port 3000!'); });","title":"app.js"},{"location":"hacker/heroku/#procfile","text":"web: node app.js","title":"Procfile"},{"location":"hacker/heroku/#launching-our-app","text":"This is the easiest part! Just run a few commands such as heroku git:remote -a name-of-your-app git add . git commit -am \u2018first commit\u2019 git push heroku master heroku open Bam! there\u2019s your app up and running!","title":"Launching our app!"},{"location":"hacker/homebrew/","text":"The Beggining \u00b6 This part is only for MacOS or other Unix-based systems. Homebrew is an easy to use package manager that allows you to download all packages you may need easily! Just install it by putting this in the terminal: /bin/bash -c \u201c$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\u201d","title":"HomeBrew, A Mac User's Shell"},{"location":"hacker/homebrew/#the-beggining","text":"This part is only for MacOS or other Unix-based systems. Homebrew is an easy to use package manager that allows you to download all packages you may need easily! Just install it by putting this in the terminal: /bin/bash -c \u201c$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\u201d","title":"The Beggining"},{"location":"hacker/others/","text":"Other Useful Tools you might want \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer tincidunt aliquam ornare. Aliquam hendrerit sapien nunc, porta auctor urna volutpat nec. Praesent blandit urna massa, id cursus nisl imperdiet a. Integer aliquet fermentum dolor. Morbi suscipit nunc a consequat tincidunt. Praesent pellentesque varius augue, eu mattis lorem tincidunt et. Maecenas sodales vestibulum enim in condimentum. In nibh massa, dictum pellentesque nunc in, sagittis rutrum mauris. Morbi venenatis justo ac semper pulvinar. Praesent eget rhoncus mi. Fusce dignissim, nisl viverra auctor consequat, elit lacus egestas diam, nec commodo orci mauris id leo. Cras eget nulla in magna ornare tempus sit amet at nisi. Donec in aliquam lacus. Phasellus vitae nunc accumsan, lacinia erat a, pharetra leo. In hac habitasse platea dictumst. Integer pretium libero felis, non malesuada ante aliquam eu. Nunc est lectus, ultrices vitae eros in, consectetur facilisis velit. Pellentesque lobortis ac eros vitae malesuada. Aenean lacinia posuere orci, vitae ornare erat ullamcorper nec. Nulla vestibulum tortor metus, ut tempus quam vulputate id. Mauris diam felis, vehicula id lorem sit amet, vehicula sollicitudin massa. Duis consequat velit non nisl hendrerit, non cursus ipsum faucibus. Ut et ex sed diam dapibus varius at a libero. Praesent dolor nisl, suscipit in enim et, maximus posuere ipsum.","title":"Other Useful Tools"},{"location":"hacker/others/#other-useful-tools-you-might-want","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer tincidunt aliquam ornare. Aliquam hendrerit sapien nunc, porta auctor urna volutpat nec. Praesent blandit urna massa, id cursus nisl imperdiet a. Integer aliquet fermentum dolor. Morbi suscipit nunc a consequat tincidunt. Praesent pellentesque varius augue, eu mattis lorem tincidunt et. Maecenas sodales vestibulum enim in condimentum. In nibh massa, dictum pellentesque nunc in, sagittis rutrum mauris. Morbi venenatis justo ac semper pulvinar. Praesent eget rhoncus mi. Fusce dignissim, nisl viverra auctor consequat, elit lacus egestas diam, nec commodo orci mauris id leo. Cras eget nulla in magna ornare tempus sit amet at nisi. Donec in aliquam lacus. Phasellus vitae nunc accumsan, lacinia erat a, pharetra leo. In hac habitasse platea dictumst. Integer pretium libero felis, non malesuada ante aliquam eu. Nunc est lectus, ultrices vitae eros in, consectetur facilisis velit. Pellentesque lobortis ac eros vitae malesuada. Aenean lacinia posuere orci, vitae ornare erat ullamcorper nec. Nulla vestibulum tortor metus, ut tempus quam vulputate id. Mauris diam felis, vehicula id lorem sit amet, vehicula sollicitudin massa. Duis consequat velit non nisl hendrerit, non cursus ipsum faucibus. Ut et ex sed diam dapibus varius at a libero. Praesent dolor nisl, suscipit in enim et, maximus posuere ipsum.","title":"Other Useful Tools you might want"},{"location":"hacker/vcs-git/","text":"Version Control w/ Git \u00b6 Version control is a crucial tool for anyone taking part in a hackathon. Without VCS, working with others would be close to impossible. By far the most popular VCS out there is Git. Git is special that in that it is completely decentralized and follows a branching model, allowing for near-flawless collaboration. Guide available in two verions: Kinesthetic Start your own repo, often times, the best way to learn is by going out and doing it. Learn from experience, that\u2019s how we all did it. We didn\u2019t have any of those fancy guides on how to start, we sorta knew what to do from trial and error. So take a few moments and go through this hands-on tutorial which will teach you everything you need to know http://jlord.us/git-it/ Visual Setting up Git \u00b6 Git is available on all major platforms (Windows/MacOS/Linux/Unix). Head over to the official download page at https://git-scm.com/downloads and select the option for your desired platform. Once Git is installed on your system you\u2019ll need to set your global username and email. This information will be cryptographically tied to all commits you make. # Set your global Git username git config --global user.name \"John Smith\" # Set your global Git email git config --global user.email \"johnsmith@example.com\" Your First Repo \u00b6 To begin using Git you first must create a Git repository. You can either turn an existing directory into a Git repo or create a new Git repo. git init example The following command created a Git repo named example in the current working directory. If we run tree -L 1 -a example we will see that the example directory now has a .git folder in it\u2019s root. $ tree -L 1 -a example example \u2514\u2500\u2500 .git The actual git repo is stored inside of the .git folder. Don\u2019t mess around with the .git directory unless you know what you are doing. The root of the example directory will be our working directory. To start a project you\u2019ll need to create a initial commit. Lets echo \u201cHello World\u201d to a README file. echo \"Hello World\" > README.md Then lets stage the file to be committed and write our first commit. git add README.md git commit -m \"Initial commit\" To see the commit history run git log . It will then open the repo commit history in your system pager (most likely less ). Adding a Remote \u00b6 Lets say you want to collaborate with someone. You some way to share your work. This is where Git remotes come in. To add an existing remote you\u2019ll need to get your remote upstream url. git remote add origin git@remote:example.git Here we are adding a remote called origin at the address git@remote:example.git . To push your existing work to this remote you\u2019ll need to run git push . git push origin master Here we are pushing our local branch master to the remote origin . Cloning a Repo \u00b6 Sometimes projects already exist, so you\u2019ll need to actually get work from the upstream. Thankfully Git streamlines this process and it is really easy to clone existing repos. git clone git@remote:example.git What the following command will do is clone the example repo to a directory called example in the current working directory. Now if you were to cd into the example directory you would see all the latest work on the master branch (or whatever the main upstream branch is). Branching & Merging \u00b6 Software development is almost never linear in the real world. Often times you end up with multiple programmers working on the same files at the same time or maybe changes are experimental. Either way, Git allows to branching to let you work in your own little isolated environment. git checkout -b new-feature The following command creates a new branch called new-feature . This branches history is now independent of the master branch, but still has parent commits on the master branch. Lets create a new commit where we append something to README.md . echo \"Goodbye Cruel World\" >> README.md If we check the status of the Git repo with git status we will see that README.md has changes that are unstaged. Once again, stage the file and create a new commit. git add README.md git commit -m \"commit 2\" Now if we checkout our master branch with git checkout master and cat out README.md with cat README.md we will see that the line \u201cGoodbye Cruel World\u201d does not exist. To merge our changes on the new-feature branch we run a git merge . git merge --no-ff new-feature What the command does is create a merge commit, the --no-ff flag tells git to make an explicit merge commit, this will make viewing history a lot more easy. Pushing/Pulling Work \u00b6 Before pushing your work to a Git remote it is a good idea to see if there are any updates on the upstream branches with git fetch . If there are any commits not in your local repo, Git will actually require you to pull in the changes with git pull . To push your work to a Git remote simply run git push origin master . This will push your master branch to the remote\u2019s master branch. You can also set origin as the default push target for the master branch as to save yourself some typing. Run git push --set-upstream origin master . From now on you will be able to push to origin with just git push . Taking it Further \u00b6 These are of course only the basics. Like most tools, the best way to learn is to just use it and figure it out along the way. To learn more read the Pro Git Book 2nd Edition , free to read on the official homepage of the Git project.","title":"Version Control w/ Git"},{"location":"hacker/vcs-git/#version-control-w-git","text":"Version control is a crucial tool for anyone taking part in a hackathon. Without VCS, working with others would be close to impossible. By far the most popular VCS out there is Git. Git is special that in that it is completely decentralized and follows a branching model, allowing for near-flawless collaboration. Guide available in two verions: Kinesthetic Start your own repo, often times, the best way to learn is by going out and doing it. Learn from experience, that\u2019s how we all did it. We didn\u2019t have any of those fancy guides on how to start, we sorta knew what to do from trial and error. So take a few moments and go through this hands-on tutorial which will teach you everything you need to know http://jlord.us/git-it/ Visual","title":"Version Control w/ Git"},{"location":"hacker/vcs-git/#setting-up-git","text":"Git is available on all major platforms (Windows/MacOS/Linux/Unix). Head over to the official download page at https://git-scm.com/downloads and select the option for your desired platform. Once Git is installed on your system you\u2019ll need to set your global username and email. This information will be cryptographically tied to all commits you make. # Set your global Git username git config --global user.name \"John Smith\" # Set your global Git email git config --global user.email \"johnsmith@example.com\"","title":"Setting up Git"},{"location":"hacker/vcs-git/#your-first-repo","text":"To begin using Git you first must create a Git repository. You can either turn an existing directory into a Git repo or create a new Git repo. git init example The following command created a Git repo named example in the current working directory. If we run tree -L 1 -a example we will see that the example directory now has a .git folder in it\u2019s root. $ tree -L 1 -a example example \u2514\u2500\u2500 .git The actual git repo is stored inside of the .git folder. Don\u2019t mess around with the .git directory unless you know what you are doing. The root of the example directory will be our working directory. To start a project you\u2019ll need to create a initial commit. Lets echo \u201cHello World\u201d to a README file. echo \"Hello World\" > README.md Then lets stage the file to be committed and write our first commit. git add README.md git commit -m \"Initial commit\" To see the commit history run git log . It will then open the repo commit history in your system pager (most likely less ).","title":"Your First Repo"},{"location":"hacker/vcs-git/#adding-a-remote","text":"Lets say you want to collaborate with someone. You some way to share your work. This is where Git remotes come in. To add an existing remote you\u2019ll need to get your remote upstream url. git remote add origin git@remote:example.git Here we are adding a remote called origin at the address git@remote:example.git . To push your existing work to this remote you\u2019ll need to run git push . git push origin master Here we are pushing our local branch master to the remote origin .","title":"Adding a Remote"},{"location":"hacker/vcs-git/#cloning-a-repo","text":"Sometimes projects already exist, so you\u2019ll need to actually get work from the upstream. Thankfully Git streamlines this process and it is really easy to clone existing repos. git clone git@remote:example.git What the following command will do is clone the example repo to a directory called example in the current working directory. Now if you were to cd into the example directory you would see all the latest work on the master branch (or whatever the main upstream branch is).","title":"Cloning a Repo"},{"location":"hacker/vcs-git/#branching-merging","text":"Software development is almost never linear in the real world. Often times you end up with multiple programmers working on the same files at the same time or maybe changes are experimental. Either way, Git allows to branching to let you work in your own little isolated environment. git checkout -b new-feature The following command creates a new branch called new-feature . This branches history is now independent of the master branch, but still has parent commits on the master branch. Lets create a new commit where we append something to README.md . echo \"Goodbye Cruel World\" >> README.md If we check the status of the Git repo with git status we will see that README.md has changes that are unstaged. Once again, stage the file and create a new commit. git add README.md git commit -m \"commit 2\" Now if we checkout our master branch with git checkout master and cat out README.md with cat README.md we will see that the line \u201cGoodbye Cruel World\u201d does not exist. To merge our changes on the new-feature branch we run a git merge . git merge --no-ff new-feature What the command does is create a merge commit, the --no-ff flag tells git to make an explicit merge commit, this will make viewing history a lot more easy.","title":"Branching &amp; Merging"},{"location":"hacker/vcs-git/#pushingpulling-work","text":"Before pushing your work to a Git remote it is a good idea to see if there are any updates on the upstream branches with git fetch . If there are any commits not in your local repo, Git will actually require you to pull in the changes with git pull . To push your work to a Git remote simply run git push origin master . This will push your master branch to the remote\u2019s master branch. You can also set origin as the default push target for the master branch as to save yourself some typing. Run git push --set-upstream origin master . From now on you will be able to push to origin with just git push .","title":"Pushing/Pulling Work"},{"location":"hacker/vcs-git/#taking-it-further","text":"These are of course only the basics. Like most tools, the best way to learn is to just use it and figure it out along the way. To learn more read the Pro Git Book 2nd Edition , free to read on the official homepage of the Git project.","title":"Taking it Further"},{"location":"hardware/arduino/","text":"","title":"Arduino"},{"location":"hardware/physics/","text":"","title":"Physics"},{"location":"hardware/raspberrypi/","text":"","title":"Raspberrypi"},{"location":"mentionable/design/","text":"","title":"Design"},{"location":"start/devpost/","text":"Intro to Devpost \u00b6 Devpost is a website designed for organizations, event organizers, and hackers like you. It\u2019s meant to help hackathons, from which hackers can join and participate in them. Over the past few months, this quarantine has nearly doubled the usage of Devpost as a repository for event hackathons. Here, you can find multitudes of hackathons ranging in difficulty from beginner to professional. We\u2019ll discuss two things you need to know in order to interact with Devpost. How to find Hackathons \u00b6 Finding hackathons is the bread and butter of Devpost. Once you\u2019ve signed up for an account on Devpost, via email or github account, you can view the list of hackathons posted and updated every few seconds. https://devpost.com/hackathons Here, you can scroll down and click on a card and look at the event details. Looking at the event details, you can see a few things, the title, tabs right below the banner, a little background behind the event, a few buttons, prizes that have or have not been announced, eligibility, requirements, etc. It\u2019s important you read through all of these, especially the eligibility, the requirements for a submission and the judging criteria as these will determine whether or not you can enter and win a prize. From here, you can click the green button at the top to join the hackathon and fulfill the task list they provide you, look at the participants, submissions, and any updates. It\u2019s important you understand the hackathon and what they expect of you when you participate. Next, you\u2019ll need to go to the participants tab or their communications platform they provide you and direct message some folks who are looking for a team. How to submit projects \u00b6 When the time comes, you\u2019ll be tasked with entering in your final project via Devpost. If you\u2019ve registered for the event and the event started, you should see the green button again on Devpost that says \u2018start submission\u2019. Click that and upload any pictures, videos that you might have and explain what you did and how you did it in text. A good submission has the following: At the top: A catchy motto A catchy title A 2-3 minute video that demos the project and explains why you did it 3-4 images of the project In the text portion: You should have these as headings: Inspiration What it does How we built it Challenges we ran into Accomplishments that we\u2019re proud of What we learned What\u2019s next Built with (here you list the languages and tools you used) Try it out For inspiration, check this submission out","title":"Intro to Devpost"},{"location":"start/devpost/#intro-to-devpost","text":"Devpost is a website designed for organizations, event organizers, and hackers like you. It\u2019s meant to help hackathons, from which hackers can join and participate in them. Over the past few months, this quarantine has nearly doubled the usage of Devpost as a repository for event hackathons. Here, you can find multitudes of hackathons ranging in difficulty from beginner to professional. We\u2019ll discuss two things you need to know in order to interact with Devpost.","title":"Intro to Devpost"},{"location":"start/devpost/#how-to-find-hackathons","text":"Finding hackathons is the bread and butter of Devpost. Once you\u2019ve signed up for an account on Devpost, via email or github account, you can view the list of hackathons posted and updated every few seconds. https://devpost.com/hackathons Here, you can scroll down and click on a card and look at the event details. Looking at the event details, you can see a few things, the title, tabs right below the banner, a little background behind the event, a few buttons, prizes that have or have not been announced, eligibility, requirements, etc. It\u2019s important you read through all of these, especially the eligibility, the requirements for a submission and the judging criteria as these will determine whether or not you can enter and win a prize. From here, you can click the green button at the top to join the hackathon and fulfill the task list they provide you, look at the participants, submissions, and any updates. It\u2019s important you understand the hackathon and what they expect of you when you participate. Next, you\u2019ll need to go to the participants tab or their communications platform they provide you and direct message some folks who are looking for a team.","title":"How to find Hackathons"},{"location":"start/devpost/#how-to-submit-projects","text":"When the time comes, you\u2019ll be tasked with entering in your final project via Devpost. If you\u2019ve registered for the event and the event started, you should see the green button again on Devpost that says \u2018start submission\u2019. Click that and upload any pictures, videos that you might have and explain what you did and how you did it in text. A good submission has the following: At the top: A catchy motto A catchy title A 2-3 minute video that demos the project and explains why you did it 3-4 images of the project In the text portion: You should have these as headings: Inspiration What it does How we built it Challenges we ran into Accomplishments that we\u2019re proud of What we learned What\u2019s next Built with (here you list the languages and tools you used) Try it out For inspiration, check this submission out","title":"How to submit projects"},{"location":"start/discord/","text":"Intro to Discord \u00b6 What is Discord? \u00b6 Discord is a wonderful instant messaging platform that allows communities and group chats to be created and joined publicly. Communication exists in multiple ways which include text, voice and video. If you\u2019re familiar with any other forms of instant messaging like Instagram or Facebook, Discord is relatively similar. Signing up for Discord \u00b6 So, to get started, we\u2019ll have you go to https://discord.com/login and sign up. Follow the directions, put in an email, password, verify the account by checking your email and click on the link the hackathon sent you to join the Discord server First steps \u00b6 Once you\u2019ve joined and created an account, you can set your pfp and click on the \u201cannouncements\u201d or \u201crules\u201d in the server on the left side and read over the rules and to-dos. Almost always these Discord servers have rules and mentors whom you can ask for help. Despite their ambient annoyance which you may find, they are almost always friendly and they also have talks and dates and times which they can announce to you, provided you\u2019ve enabled notifications on If you don\u2019t exactly see this on the right, it\u2019s fine. This, on the right, is a community (not to be mistaken for a server) which is just a step up from a server. It boasts a server banner and new reaction stickers among other things.","title":"Intro to Discord"},{"location":"start/discord/#intro-to-discord","text":"","title":"Intro to Discord"},{"location":"start/discord/#what-is-discord","text":"Discord is a wonderful instant messaging platform that allows communities and group chats to be created and joined publicly. Communication exists in multiple ways which include text, voice and video. If you\u2019re familiar with any other forms of instant messaging like Instagram or Facebook, Discord is relatively similar.","title":"What is Discord?"},{"location":"start/discord/#signing-up-for-discord","text":"So, to get started, we\u2019ll have you go to https://discord.com/login and sign up. Follow the directions, put in an email, password, verify the account by checking your email and click on the link the hackathon sent you to join the Discord server","title":"Signing up for Discord"},{"location":"start/discord/#first-steps","text":"Once you\u2019ve joined and created an account, you can set your pfp and click on the \u201cannouncements\u201d or \u201crules\u201d in the server on the left side and read over the rules and to-dos. Almost always these Discord servers have rules and mentors whom you can ask for help. Despite their ambient annoyance which you may find, they are almost always friendly and they also have talks and dates and times which they can announce to you, provided you\u2019ve enabled notifications on If you don\u2019t exactly see this on the right, it\u2019s fine. This, on the right, is a community (not to be mistaken for a server) which is just a step up from a server. It boasts a server banner and new reaction stickers among other things.","title":"First steps"},{"location":"start/hackathons/","text":"Introduction to Hackathons \u00b6 Hackathons, CTFS, and HackCons. You might be thinking to yourself, What the heck is a hackathon? Sounds scary, right? Don\u2019t worry, it\u2019s not that type of hacking. Over the last few months, hackathons have taken the world by storm. You might have seen one such hackathon in your school or online in Devpost, more on that later, but it\u2019s not what you think it is. No, we don\u2019t break into school computers or mainframes. Yes, we do drink redbull and stay hunched over our laptops, pulling all-nighters, and sleeping on the cold ground Hackathons provide a venue for self-expression and creativity through technology. People with technical backgrounds come together, form teams around a problem or idea, and collaboratively code a unique solution from scratch \u2014 these generally take shape in the form of websites, mobile apps, and robots. Simply put, you can think of hackathons as like a startup generator. A place to share ideas or solutions to problems and present them under a time pressure. Let\u2019s dive right into the few differences between these three categories. Also, if you are a visual learner, try this video Kinesthetic Join a hackathon, often times, the best way to learn is by going out and doing it. Learn from experience, that\u2019s how we all did it. We didn\u2019t have any of those fancy guides on how to start, we sorta knew what to expect. Your mission is to join a hackathon, just for the experience of joining them, you don\u2019t have to participate in them if you don\u2019t want to. Visual Hackathons \u00b6 Large in size. Compete to win multiple category prizes as well as placement prize. Abundant amount of hackathons in this age. So much money involved and sometimes free items as well like stickers or shirts Capture the Flag (CTF) \u00b6 Smaller in size. Race to finish security and general hacking puzzles. Not as much prizes, only placement prizes. Hack Conferences \u00b6 No competition Filled with talks and games with mentors and staff Usually about Hackathon *creation Joining a Hackathon \u00b6 We\u2019ll be talking about hackathons specifically in this guide as they are abundant in number and they have great prizes to grab. There are a few places to find hackathons, some of the best places we\u2019ve are at Devpost, MLH.io, HackerEarth and HackerLeague. These places are all websites that lists hundreds of event hackathons that you can join for free and submit projects to. They\u2019re wonderful places because they have the dates of each event hackathon, an image of the hackathon which describes the theme of the hackathon, and the prize pool of the hackathon. Now, once you\u2019ve picked a hackathon that you\u2019re willing to do, you can head over and find a place to chat and ask any questions. Usually, this place is on a social media platform like Discord or Slack. So, we\u2019ll help you in creating a Discord or Slack account and first steps that you might want to do.","title":"Introduction to Hackathons"},{"location":"start/hackathons/#introduction-to-hackathons","text":"Hackathons, CTFS, and HackCons. You might be thinking to yourself, What the heck is a hackathon? Sounds scary, right? Don\u2019t worry, it\u2019s not that type of hacking. Over the last few months, hackathons have taken the world by storm. You might have seen one such hackathon in your school or online in Devpost, more on that later, but it\u2019s not what you think it is. No, we don\u2019t break into school computers or mainframes. Yes, we do drink redbull and stay hunched over our laptops, pulling all-nighters, and sleeping on the cold ground Hackathons provide a venue for self-expression and creativity through technology. People with technical backgrounds come together, form teams around a problem or idea, and collaboratively code a unique solution from scratch \u2014 these generally take shape in the form of websites, mobile apps, and robots. Simply put, you can think of hackathons as like a startup generator. A place to share ideas or solutions to problems and present them under a time pressure. Let\u2019s dive right into the few differences between these three categories. Also, if you are a visual learner, try this video Kinesthetic Join a hackathon, often times, the best way to learn is by going out and doing it. Learn from experience, that\u2019s how we all did it. We didn\u2019t have any of those fancy guides on how to start, we sorta knew what to expect. Your mission is to join a hackathon, just for the experience of joining them, you don\u2019t have to participate in them if you don\u2019t want to. Visual","title":"Introduction to Hackathons"},{"location":"start/hackathons/#hackathons","text":"Large in size. Compete to win multiple category prizes as well as placement prize. Abundant amount of hackathons in this age. So much money involved and sometimes free items as well like stickers or shirts","title":"Hackathons"},{"location":"start/hackathons/#capture-the-flag-ctf","text":"Smaller in size. Race to finish security and general hacking puzzles. Not as much prizes, only placement prizes.","title":"Capture the Flag (CTF)"},{"location":"start/hackathons/#hack-conferences","text":"No competition Filled with talks and games with mentors and staff Usually about Hackathon *creation","title":"Hack Conferences"},{"location":"start/hackathons/#joining-a-hackathon","text":"We\u2019ll be talking about hackathons specifically in this guide as they are abundant in number and they have great prizes to grab. There are a few places to find hackathons, some of the best places we\u2019ve are at Devpost, MLH.io, HackerEarth and HackerLeague. These places are all websites that lists hundreds of event hackathons that you can join for free and submit projects to. They\u2019re wonderful places because they have the dates of each event hackathon, an image of the hackathon which describes the theme of the hackathon, and the prize pool of the hackathon. Now, once you\u2019ve picked a hackathon that you\u2019re willing to do, you can head over and find a place to chat and ask any questions. Usually, this place is on a social media platform like Discord or Slack. So, we\u2019ll help you in creating a Discord or Slack account and first steps that you might want to do.","title":"Joining a Hackathon"},{"location":"start/idea/","text":"Idea Creation Guide \u00b6 For a hackathon or for any startup, you need an idea. An idea is a powerful thing, it can bring people towards you, and it can win you prizes. So don\u2019t treat an idea as something useless, it is important as some may say. However, what most don\u2019t tell you is how you\u2019re supposed to create ideas. Idea creation is very simple. If you\u2019re given a theme, even better. But, if you\u2019re not or you\u2019re unsure, that\u2019s perfectly fine. The Twilight Zone \u00b6 This is what I like to call our way of creating ideas. It\u2019s way different from the show, but there are a few similarities. The Twilight Zone is a mysterious zone much comparable to day dreaming. In that zone, ideas flow to you from every facet of your daily life. I don\u2019t have to tell you that forcibly coming up with ideas may result in garbage, but, in the Twilight Zone, all ideas are good. It just depends on your imagination. So try it out right now. Try and relax as much as possible and stare at the ceiling or out of your window. You\u2019d be suprised at how many ideas you can think up. Once you\u2019ve come up with ideas, you can try to use our guide below of seeing if your idea will win. Base your ideas in reality \u00b6 Here are some of our points that we try to base our ideas on Something that solves a problem, Something that advances a solution. Something that is new. Something that is presentable. These 4 are all criteria that we hackers base our ideas on. It\u2019s like a secret criteria that we all know but don\u2019t really know , so don\u2019t try to ask about this, they\u2019ll be confused.","title":"Idea Creation Guide"},{"location":"start/idea/#idea-creation-guide","text":"For a hackathon or for any startup, you need an idea. An idea is a powerful thing, it can bring people towards you, and it can win you prizes. So don\u2019t treat an idea as something useless, it is important as some may say. However, what most don\u2019t tell you is how you\u2019re supposed to create ideas. Idea creation is very simple. If you\u2019re given a theme, even better. But, if you\u2019re not or you\u2019re unsure, that\u2019s perfectly fine.","title":"Idea Creation Guide"},{"location":"start/idea/#the-twilight-zone","text":"This is what I like to call our way of creating ideas. It\u2019s way different from the show, but there are a few similarities. The Twilight Zone is a mysterious zone much comparable to day dreaming. In that zone, ideas flow to you from every facet of your daily life. I don\u2019t have to tell you that forcibly coming up with ideas may result in garbage, but, in the Twilight Zone, all ideas are good. It just depends on your imagination. So try it out right now. Try and relax as much as possible and stare at the ceiling or out of your window. You\u2019d be suprised at how many ideas you can think up. Once you\u2019ve come up with ideas, you can try to use our guide below of seeing if your idea will win.","title":"The Twilight Zone"},{"location":"start/idea/#base-your-ideas-in-reality","text":"Here are some of our points that we try to base our ideas on Something that solves a problem, Something that advances a solution. Something that is new. Something that is presentable. These 4 are all criteria that we hackers base our ideas on. It\u2019s like a secret criteria that we all know but don\u2019t really know , so don\u2019t try to ask about this, they\u2019ll be confused.","title":"Base your ideas in reality"},{"location":"start/team/","text":"Team Creation Guide \u00b6 Finding a team \u00b6 There are a few ways to get a team before a hackathon. One way is to find people on social media and reach out. These places can be from anywhere as long as they fit the age limit in hackathons. They can be from Stack Exchange, Stack Overflow, and Quora. Start with your own network of friends and like-minded acquaintances. You can also find other hackers on meetups and developer groups. Further, hackathons conducted on platforms like HackerEarth allow participants to form teams on the platform itself. So, start your hunt early. It does you no good to diddle on finding a new team during the hackathon. Kinesthetic https://www.forbes.com/sites/joshsteimle/2014/01/14/how-to-build-your-startup-team-from-scratch/ I recommend you see this website for how to create a team in small chunk sized steps, if you\u2019re a kinesthetic learner Visual If you\u2019re more of a visual guy like I am, and you love The Office, you\u2019ll love this. This will tell you what team building is all about Work on your pitch \u00b6 Most oftenly, in big hackathons, you\u2019ll find people who\u2019ll join but only because of the idea and that\u2019s a shame because those people usually have the best skills. Like they always say, like-minded people tend to flock together. So work on your pitch, if you were to sell someone an imaginary papercup in the elevator, what few things could you say that would make them want to buy it? Maybe it has multiple features, maybe it\u2019s something revolutionary. That\u2019s what you need.","title":"Team Creation Guide"},{"location":"start/team/#team-creation-guide","text":"","title":"Team Creation Guide"},{"location":"start/team/#finding-a-team","text":"There are a few ways to get a team before a hackathon. One way is to find people on social media and reach out. These places can be from anywhere as long as they fit the age limit in hackathons. They can be from Stack Exchange, Stack Overflow, and Quora. Start with your own network of friends and like-minded acquaintances. You can also find other hackers on meetups and developer groups. Further, hackathons conducted on platforms like HackerEarth allow participants to form teams on the platform itself. So, start your hunt early. It does you no good to diddle on finding a new team during the hackathon. Kinesthetic https://www.forbes.com/sites/joshsteimle/2014/01/14/how-to-build-your-startup-team-from-scratch/ I recommend you see this website for how to create a team in small chunk sized steps, if you\u2019re a kinesthetic learner Visual If you\u2019re more of a visual guy like I am, and you love The Office, you\u2019ll love this. This will tell you what team building is all about","title":"Finding a team"},{"location":"start/team/#work-on-your-pitch","text":"Most oftenly, in big hackathons, you\u2019ll find people who\u2019ll join but only because of the idea and that\u2019s a shame because those people usually have the best skills. Like they always say, like-minded people tend to flock together. So work on your pitch, if you were to sell someone an imaginary papercup in the elevator, what few things could you say that would make them want to buy it? Maybe it has multiple features, maybe it\u2019s something revolutionary. That\u2019s what you need.","title":"Work on your pitch"}]}